version: "3.8"

services:
  db:
    image: postgres:15-alpine
    container_name: cromwell-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  db_test:
    image: postgres:15-alpine
    container_name: cromwell-db-test
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres_test
    ports:
      - "25432:5432"
    volumes:
      - pgdata_test:/var/lib/postgresql/data

  migrations:
    build: ../api
    container_name: cromwell-migrations
    command: ["npm", "run", "db:migrate"]
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db

  api:
    build: ../api
    container_name: cromwell-api

    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      DATABASE_TEST_URL: postgres://postgres:postgres@db_test:5432/postgres_test
      PORT: 3000
      JWT_SECRET: supersecret123
    ports:
      - "3000:3000"
    command: >
      sh -c "
        echo 'Waiting for DB...' &&
        echo 'DB ready, running migrations...' &&
        npm run db:generate &&
        npm run db:migrate &&
        echo 'Starting API...' &&
        npm run dev
      "
    depends_on:
      - db

  test:
    build: ../api
    container_name: cromwell-api-tests
    environment:
      DATABASE_TEST_URL: postgres://postgres:postgres@db_test:5432/postgres_test
      NODE_ENV: test
    command: >
      sh -c "
        echo 'Waiting for test DB...' &&
        until pg_isready -h db_test -U postgres; do
          echo 'Waiting for db_test...'
          sleep 1
        done &&
        echo 'Running API integration tests...' &&
        npm run test:integration
      "
    depends_on:
      - db_test
      - api

  frontend:
    build: ../client
    container_name: cromwell-frontend
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    depends_on:
      - api

volumes:
  pgdata:
  pgdata_test:
